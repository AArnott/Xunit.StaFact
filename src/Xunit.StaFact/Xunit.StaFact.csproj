<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">
  <PropertyGroup>
    <TargetFrameworks>net472;netstandard2.0;netcoreapp3.1</TargetFrameworks>
    <RootNamespace>Xunit</RootNamespace>

    <Description>Run your xunit-based tests on an STA thread with the WPF Dispatcher, a WinForms SynchronizationContext, or even a cross-platform generic UI thread emulation with a SynchronizationContext that keeps code running on a "main thread" for that test.

Simply use [WpfFact], [WinFormsFact], [StaFact] or the cross-platform [UIFact] on your test method to run your test under conditions that most closely match the main thread in your application.

Theory variants of these attributes allow for parameterized testing. Check out the xunit.combinatorial nuget package for pairwise or combinatorial testing with theories.</Description>
    <PackageTags>STA xunit testing unit WPF WinForms testing</PackageTags>

    <UseWPF Condition=" '$(TargetFramework)' == 'netcoreapp3.1' ">true</UseWPF>
    <UseWindowsForms Condition=" '$(TargetFramework)' == 'netcoreapp3.1' ">true</UseWindowsForms>
    <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);NETSDK1105</MSBuildWarningsAsMessages>
    <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);NETSDK1106</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="Sdk.Desktop\**" Condition=" '$(TargetFramework)' == 'netstandard2.0' " />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net472' ">
    <Reference Include="System.Windows.Forms" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="xunit.extensibility.execution" />
  </ItemGroup>
  <ItemGroup>
    <!-- Suppress the FrameworkReference in our nuspec file so that our package can still restore on Linux+Mac machines.
         See https://github.com/AArnott/Xunit.StaFact/issues/35 for more info. -->
    <FrameworkReference Update="Microsoft.WindowsDesktop.App" PrivateAssets="all" />
  </ItemGroup>
</Project>
